#ifndef __SUPOS_CPP_ALGORITHM
#define __SUPOS_CPP_ALGORITHM

#include<iterator>

namespace std {
    template <class ForwardIterator, class T>
    ForwardIterator lower_bound (ForwardIterator first,
                                 ForwardIterator last, const T& val){
        ForwardIterator it;
        typename iterator_traits<ForwardIterator>::difference_type count, step;
        count = distance(first,last);
        while (count>0)
        {
            it = first; step=count/2; advance (it,step);
            if (*it<val) {
                first=++it;
                count-=step+1;
            }
            else count=step;
        }
        return first;
    }

    template <class ForwardIterator, class T, class Compare>
    ForwardIterator lower_bound (ForwardIterator first, ForwardIterator last,
                                 const T& val, Compare comp){
        ForwardIterator it;
        typename iterator_traits<ForwardIterator>::difference_type count, step;
        count = distance(first,last);
        while (count>0)
        {
            it = first; step=count/2; advance (it,step);
            if (comp(*it,val)){
                first=++it;
                count-=step+1;
            }
            else count=step;
        }
        return first;
    }

}

#endif
